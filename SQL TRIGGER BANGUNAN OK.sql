USE dbPajak 
GO
IF EXISTS(SELECT 1 FROM sys.triggers 
          WHERE Name = 'PICU_BANGUNAN')
BEGIN
    DROP TRIGGER PICU_BANGUNAN
END
GO
CREATE TRIGGER picu_bangunan
ON  [dbo].DAT_OP_BANGUNAN
AFTER INSERT,DELETE,UPDATE
AS
BEGIN
SET NOCOUNT ON;
DECLARE @xKec nvarchar(3),@xKel nvarchar(3),@xBlok nvarchar(3),@xUrut nvarchar(4),@xJenis nvarchar(1)
DECLARE @xLuas bigint
DECLARE @xNilai bigint
SET ROWCOUNT 0
SET ROWCOUNT 1
DECLARE C_BANGUNAN CURSOR FOR 
--SELECT @xKec=kd_kecamatan,@xKel=KD_KELURAHAN, @xBlok=KD_BLOK, @xURUT=NO_URUT,@xJenis=KD_JNS_OP,@xLUAS=SUM(LUAS_BNG),@xNILAI=SUM(NILAI_SISTEM_BNG) FROM DAT_OP_BANGUNAN 
		--group BY KD_KECAMATAN,KD_KELURAHAN,KD_BLOK,NO_URUT,KD_JNS_OP,LUAS_BNG,NILAI_SISTEM_BNG 
SELECT KD_KECAMATAN,KD_KELURAHAN,KD_BLOK, NO_URUT,KD_JNS_OP,sum(LUAS_BNG) as tot_LUAS,SUM(NILAI_SISTEM_BNG) AS tot_NILAI FROM DAT_OP_BANGUNAN
	GROUP BY KD_KECAMATAN,KD_KELURAHAN,KD_BLOK, NO_URUT,KD_JNS_OP
SET ROWCOUNT 0
	/*SET @xKec=(select KD_KECAMATAN FROM INSERTED);
	SET @xKel=(select KD_KELURAHAN FROM INSERTED);
	SET @xBlok=(select KD_BLOK FROM INSERTED);
	SET @xUrut=(select NO_URUT FROM INSERTED);
	SET @xKec=(select KD_JNS_OP FROM INSERTED);*/
OPEN C_BANGUNAN
FETCH FROM C_BANGUNAN INTO @xKec,@xKel,@xBlok,@xURUT,@xJenis,@xLuas,@xNilai
WHILE @@FETCH_STATUS = 0
BEGIN
   --UPDATE STOK_BARANG SET qty_in = @qty_masuk,
   --qty_akhir = qty_akhir + @qty_masuk
   --WHERE kd_brg = @kdbrg_masuk
   UPDATE DAT_OBJEK_PAJAK SET TOTAL_LUAS_BNG=@xLuas, NILAI_SISTEM=@xNilai 
   WHERE (KD_KECAMATAN=@xKec and KD_KELURAHAN=@xKel and KD_BLOK=@xBlok and NO_URUT=@xUrut and KD_JNS_OP=@xJenis)
   FETCH NEXT FROM C_BANGUNAN INTO @xKec,@xKel,@xBlok,@xURUT,@xJenis,@xLuas,@xNilai
END
CLOSE C_BANGUNAN
DEALLOCATE C_BANGUNAN
END