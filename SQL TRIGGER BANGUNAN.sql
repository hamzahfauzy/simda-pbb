USE dbPajak 
GO 
IF EXISTS(SELECT 1 FROM sys.triggers 
          WHERE Name = 'PICU_BANGUNAN')
BEGIN
    DROP TRIGGER PICU_BANGUNAN
END
GO
CREATE TRIGGER PICU_BANGUNAN
   ON  DAT_OP_BANGUNAN
   AFTER  INSERT,DELETE,UPDATE
AS 
BEGIN
DECLARE @JUM_LUAS bigint,@JUM_NILAI bigint,@xNOP NVARCHAR(30),@T_AWAL NVARCHAR(4),
		@xMIN float,@xMAX float,@cNilaiPerM2 float--,@xNJOP_BNG bigint
--DECLARE KURSORQ CURSOR		
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	--@JUM_LUAS BIGINT, @JUM_NILAI BIGINT,@chPajak3 nvarchar(1),@NILAI_LUAS BIGINT,@T_AWAL NVARCHAR(4),@NJOP_B BIGINT,@XTOTAL BIGINT
	SET ROWCOUNT 1
	SELECT @T_AWAL=THN_AWAL_KLS_BNG FROM KELAS_BANGUNAN order by THN_AWAL_KLS_BNG desc
	SET ROWCOUNT 0
	--OPEN KURSORQ
	--FETCH NEXT FROM KURSORQ INTO 
	
	SELECT @xNOP='12.12'+'.'+KD_KECAMATAN+'.'+KD_KELURAHAN+'.'+KD_BLOK+'-'+NO_URUT+'.'+KD_JNS_OP,@JUM_LUAS=SUM(LUAS_BNG),@JUM_NILAI=SUM(NILAI_SISTEM_BNG) FROM DAT_OP_BANGUNAN 
	GROUP BY KD_KECAMATAN,KD_KELURAHAN,KD_BLOK,NO_URUT,KD_JNS_OP,LUAS_BNG,NILAI_SISTEM_BNG, KD_KECAMATAN,KD_KELURAHAN ,KD_BLOK,NO_URUT,KD_JNS_OP
	IF @JUM_LUAS IS NOT NULL
	BEGIN
			--TENTUKAN NJOP BERDASARKAN LUAS DAN NILAI SISTEM
			--SELECT @T_AWAL=THN_AWAL_KLS_BNG FROM KELAS_BANGUNAN order by THN_AWAL_KLS_BNG desc
			SELECT @xMIN=NILAI_MIN_BNG,@xMAX=NILAI_MAX_BNG,@cNilaiPerM2=NILAI_PER_M2_BNG FROM KELAS_BANGUNAN WHERE THN_AWAL_KLS_BNG =@T_AWAL
			--WHILE @@ROWCOUNT <> 0
			--BEGIN
				IF @JUM_NILAI>=@xMIN and @JUM_NILAI<=@xMAX
				BEGIN
					--@xNJOP_BNG= @cNilaiPerM2--*@JUM_LUAS*1000,0)
					UPDATE DAT_OBJEK_PAJAK SET TOTAL_LUAS_BNG=@JUM_LUAS, NJOP_BNG=ROUND(@cNilaiPerM2*@JUM_LUAS*1000,0) WHERE KD_PROPINSI +'.'+ KD_DATI2 +'.'+ KD_KECAMATAN +'.'+ KD_KELURAHAN +'.'+ KD_BLOK + '-' + NO_URUT +'.'+ KD_JNS_OP=@xNOP
				END			
			--END
	END
END
GO
